#!/bin/bash
set -euo pipefail

un="$(uname)"
local_os="linux"
if [ ${un} == 'Darwin' ]; then
    local_os="darwin"
fi

tlsDir="bootauth"
rm -rf cluster
rm -rf ${tlsDir}

# Render assets
if [ ! -d "cluster" ]; then
  ../../_output/bin/${local_os}/bootkube render --asset-dir=cluster --api-servers=https://172.17.4.100:443
  # Add rendered kubeconfig to the node user-data
  cat user-data.sample > cluster/user-data

#  sed -i "/- controller-manager/a\        - --cluster-signing-cert-file=/home/core/${tlsDir}/ca.pem" cluster/manifests/kube-controller-manager.yaml
#  sed -i "/- controller-manager/a\        - --cluster-signing-key-file=/home/core/${tlsDir}/ca-key.pem" cluster/manifests/kube-controller-manager.yaml

fi

# Start the VM
vagrant up

ssh_ident="$(vagrant ssh-config | awk '/IdentityFile/ {print $2}' | tr -d '"')"
ssh_port="$(vagrant ssh-config | awk '/Port [0-9]+/ {print $2}')"

# Generate credentials and transfer onto host
curl https://raw.githubusercontent.com/coreos/coreos-baremetal/master/scripts/tls/root-ca -o root-ca && chmod +x root-ca
mkdir -p ${tlsDir}
./root-ca ${tlsDir}
scp -q -o stricthostkeychecking=no -i ${ssh_ident} -P ${ssh_port} -r ${tlsDir} core@127.0.0.1:/home/core/${tlsDir}

echo Transfer bootstrap kubeconfig
scp -q -o stricthostkeychecking=no -i ${ssh_ident} -P ${ssh_port} cluster/auth/kubeconfig core@127.0.0.1:/home/core/bootstrap-kubeconfig
ssh -q -o stricthostkeychecking=no -i ${ssh_ident} -p ${ssh_port} core@127.0.0.1 "sudo mv /home/core/bootstrap-kubeconfig /etc/kubernetes/bootstrap-kubeconfig"

echo Copy locally rendered assets to the server
mv cluster/auth/kubeconfig kubeconfig
cat ${tlsDir}/ca.pem >> cluster/tls/ca.crt
scp -q -o stricthostkeychecking=no -i ${ssh_ident} -P ${ssh_port} -r cluster core@127.0.0.1:/home/core/cluster
scp -q -o stricthostkeychecking=no -i ${ssh_ident} -P ${ssh_port} ../../_output/bin/linux/bootkube core@127.0.0.1:/home/core

echo Run bootkube
ssh -q -o stricthostkeychecking=no -i ${ssh_ident} -p ${ssh_port} core@127.0.0.1 "sudo GLOG_v=9 /home/core/bootkube start --asset-dir=/home/core/cluster 2>> /home/core/bootkube.log"

echo
echo "Bootstrap complete. Access your kubernetes cluster using:"
echo "kubectl --kubeconfig=cluster/auth/kubeconfig get nodes"
echo

